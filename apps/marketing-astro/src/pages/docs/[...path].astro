---
import {
  getAllFiles,
  getCommitDate,
  getFile,
  collectHeadings,
  getFiles,
} from "./utils";
import Markdoc from "@markdoc/markdoc";
import Root from "../../layouts/root.astro";
import { Feedback } from "./feedback";
import { PageNavigation } from "./nextPage";
import { ArrowUpRightIcon } from "@heroicons/react/24/solid";
import { cx } from "class-variance-authority";
import "./docs.css";
import NavSidebar from "../../components/docs/navSidebar.astro";
import MobileNavSidebar from "../../components/docs/mobileNavSidebar.astro";

export const prerender = true;

export async function getStaticPaths() {
  const files = await getAllFiles();

  return files.map(({ url }) => ({
    params: {
      path: url,
    },
  }));
}

const config: any = {
  tags: {
    // tabs,
    // tab,
    // callout,
  },
  nodes: {
    // heading,
    // link,
    // fence,
    // code,
  },
  variables: {},
};

const { path } = Astro.params;

const file = await getFile(path);

const lastModified = await getCommitDate(file.path);

const ast = Markdoc.parse(file.text);

const content = Markdoc.transform(ast, config);

const html = Markdoc.renderers.html(content);

const headings = collectHeadings(ast);

function isActive(section: any) {
  return false;
}

const sections = await getFiles();
---

<Root title="" description="" viewTransitions>
  <div class="mx-auto px-4">
    <div
      class="relative mx-auto flex w-full flex-auto justify-center sm:px-2 md:px-8"
    >
      <div class="md:hidden">
        <MobileNavSidebar>
          <div id="docs-sidebar-nav">
            <NavSidebar path={path} sections={sections} mobile />
          </div>
        </MobileNavSidebar>
      </div>
      <div class="hidden md:relative md:block md:flex-none">
        <div
          class="sticky top-[4.5rem] border-r border-outline-variant md:w-56 lg:w-60 h-[calc(100vh-4.5rem)] overflow-y-auto overflow-x-hidden -ml-1 pl-1 scrollbar-thin py-16"
        >
          <NavSidebar path={path} sections={sections} />
        </div>
      </div>

      <div
        class="min-w-0 max-w-4xl flex-auto prose px-4 pt-24 pb-16 md:py-16 lg:pl-8 lg:pr-0 xl:px-12 h-full"
      >
        <Fragment set:html={html} />

        <div
          class="flex justify-between items-center flex-col lg:flex-row mt-24 space-y-6"
        >
          <Feedback page={file.url} client:only="react" />
          {
            lastModified && (
              <p class="text-sm text-on-surface-variant not-prose text-right sm:whitespace-nowrap">
                Last modified: {lastModified.toLocaleDateString()}
              </p>
            )
          }
        </div>
        <hr class="border-outline-variant mt-4 mb-4" />
        <PageNavigation currentPageURL={"/docs/" + path} client:only="react" />
      </div>
      <div
        class="hidden xl:sticky xl:top-[4.5rem] xl:-mr-6 xl:block xl:h-[calc(100vh-4.5rem)] xl:flex-none xl:overflow-y-auto xl:py-16 xl:pr-6"
      >
        <!-- <HeadingNav
          headings={headings}
          githubURL={file.githubURL}
          client:only="react"
        /> -->

        <!-- PAGE NAVIGATION -->

        <nav aria-labelledby="on-this-page-title" class="w-56">
          {
            headings.length > 0 && (
              <>
                <h2
                  id="on-this-page-title"
                  class="font-display text-sm font-medium text-slate-900 dark:text-white"
                >
                  On this page
                </h2>
                <ol role="list" class="mt-4 space-y-3 text-sm">
                  {headings.map((section) => (
                    <li>
                      <h3>
                        <a
                          href={`#${section.id}`}
                          class={cx(
                            isActive(section)
                              ? "text-tertiary"
                              : "font-normal text-on-surface-variant hover:text-on-surface"
                          )}
                        >
                          {section.title}
                        </a>
                      </h3>
                      {section.children.length > 0 && (
                        <ol
                          role="list"
                          class="mt-2 space-y-3 pl-5 text-on-surface-variant"
                        >
                          {section.children.map((subSection: any) => (
                            <li>
                              <a
                                href={`#${subSection.id}`}
                                class={
                                  isActive(subSection)
                                    ? "text-tertiary"
                                    : "text-on-surface-variant hover:text-on-surface"
                                }
                              >
                                {subSection.title}
                              </a>
                            </li>
                          ))}
                        </ol>
                      )}
                    </li>
                  ))}
                </ol>
                <hr class="border-outline-variant my-4" />
                <a
                  href={file.githubURL}
                  rel="noopener noreferrer"
                  target="_blank"
                  class="text-sm flex items-center text-on-surface-variant hover:text-on-surface"
                >
                  Edit this page on GitHub{" "}
                  <ArrowUpRightIcon
                    className="ml-1 mt-px"
                    height="1em"
                    width="1em"
                  />
                </a>
              </>
            )
          }
        </nav>
      </div>
    </div>
  </div>
</Root>

<script>
  
  document.addEventListener("astro:before-swap", () => {
    sessionStorage.setItem(
      "docs-sidebar-nav-scroll",
      document.getElementById("docs-sidebar-nav")!.scrollTop.toString()
    );
  });

  document.addEventListener("astro:after-swap", () => {
    const scroll = sessionStorage.getItem("docs-sidebar-nav-scroll");
    if (scroll) {
      document.getElementById("docs-sidebar-nav")!.scrollTo({
        top: parseInt(scroll),
        behavior: "instant",
      });
    }
  });
</script>
