---
import { cx } from "class-variance-authority";
import Button from "./button.astro";
import { Logo } from "@pixeleye/ui/src/logo";
import Bars3Icon from "@heroicons/react/24/solid/Bars3Icon";
import XMarkIcon from "@heroicons/react/24/solid/XMarkIcon";

interface Props {
  activeNav: "Home" | "Docs" | "Playground";
}

const navigation = [
  { name: "Home", href: "/home" },
  {
    name: "Docs",
    href: "/docs/getting-started/introduction",
    selector: "/docs",
  },
  { name: "Pricing", href: "/pricing" },
  { name: "Playground", href: "/playground" },
];

const { activeNav } = Astro.props;

const isLoggedIn = false;
---

<header
  class="bg-surface/90 backdrop-blur-sm fixed z-30 w-full border-b border-b-outline-variant"
>
  <nav
    class="mx-auto flex max-w-8xl items-center justify-between px-6 py-4 lg:px-8"
    aria-label="Global"
  >
    <div class="flex items-center gap-x-12">
      <a
        href="/home"
        class={cx("-m-1.5 p-1.5", activeNav === "Home" && "!text-tertiary")}
      >
        <span class="sr-only">Pixeleye</span>
        <Logo className="h-8 w-auto hover:text-tertiary transition-colors" />
      </a>
      <div class="hidden lg:flex lg:gap-x-12">
        {
          navigation.map((item) => (
            <a
              href={item.href}
              class={cx(
                "text-sm font-semibold leading-6 text-on-surface hover:text-tertiary transition-colors",
                activeNav === item.name && "!text-tertiary"
              )}
            >
              {item.name}
            </a>
          ))
        }
      </div>
    </div>
    <div class="flex items-center space-x-4">
      <a
        href="https://github.com/pixeleye-io/pixeleye"
        class="text-sm hidden lg:block font-semibold leading-6 text-tertiary"
        target="_blank"
      >
        Star us on Github
      </a>

      {/* DOC SEARCH */}
      <div id="docsearch" class="lg:w-9 w-8" transition:persist></div>

      <!-- @ts-ignore -->
      <Button
        as="a"
        variant="outline"
        class="w-28 lg:[[data-logged-in='true']_&]:block hidden"
        href="/dashboard"
      >
        Dashboard
      </Button>
      <!-- @ts-ignore -->
      <Button
        as="a"
        variant="outline"
        class="hidden w-28 lg:[[data-logged-in='false']_&]:block"
        href="/registration"
      >
        Get started
      </Button>
      <!-- @ts-ignore -->
      <Button
        as="span"
        variant="outline"
        aria-hidden
        class="hidden w-28 lg:[[data-logged-in='false']_&]:hidden lg:[[data-logged-in='true']_&]:hidden lg:block !text-transparent"
      >
        Get started
      </Button>

      <!-- @ts-ignore -->
      <Button
        type="button"
        variant="ghost"
        id="sidebar-button"
        class="h-8 lg:hidden inline-flex items-center justify-center"
      >
        <span class="sr-only">Open main menu</span>
        <Bars3Icon className="h-6 w-6" aria-hidden="true" />
      </Button>
    </div>
  </nav>
</header>

<dialog
  id="navbar-sidebar"
  class="lg:hidden w-full max-w-full max-h-full sm:max-w-sm h-screen ml-auto fixed m-0 z-50 shadow inset-y-0"
>
  <div
    class="h-full overflow-y-auto px-6 py-4 w-full sm:ring-1 bg-surface-container sm:ring-outline-variant"
  >
    <div class="flex items-center justify-between -mt-0.5">
      <a
        href="/home"
        class={cx(
          "-mx-1.5 -mt-1 p-1.5",
          activeNav === "Home" && "!text-tertiary"
        )}
      >
        <span class="sr-only">Pixeleye</span>
        <Logo className="h-8 w-auto" />
      </a>
      <form method="dialog">
        <!-- @ts-ignore -->
        <Button variant="ghost" autofocus>
          <span class="sr-only">Close menu</span>
          <XMarkIcon className="h-6 w-6" aria-hidden="true" />
        </Button>
      </form>
    </div>
    <div class="mt-6 flow-root">
      <div class="-my-6 divide-y divide-outline-variant">
        <div class="space-y-2 py-6">
          {
            navigation.map((item) => (
              <a
                href={item.href}
                class={cx(
                  "-mx-3 block rounded-lg px-3 py-2 text-base font-semibold leading-7 text-on-surface-container hover:bg-surface-container-high",
                  activeNav === item.name && "!text-tertiary"
                )}
              >
                {item.name}
              </a>
            ))
          }
        </div>
        <div class="py-6 flex flex-col space-y-2">
          <a
            href="https://github.com/pixeleye-io/pixeleye"
            class="-mx-3 block rounded-lg px-3 py-2.5 text-base font-semibold leading-7 text-on-surface-container hover:bg-surface-container-high"
          >
            Star us on Github
          </a>

          <a
            href={"/dashboard"}
            class="-mx-3 rounded-lg px-3 py-2.5 text-base font-semibold leading-7 text-on-surface-container hover:bg-surface-container-high [[data-logged-in='true']_&]:block hidden"
          >
            Dashboard
            <span class="[[data-logged-in='false']_&]:block hidden">
              Get started
            </span>
          </a>

          <a
            href={"/registration"}
            class="-mx-3 rounded-lg px-3 py-2.5 text-base font-semibold leading-7 text-on-surface-container hover:bg-surface-container-high [[data-logged-in='false']_&]:block hidden"
          >
            Get started
          </a>
        </div>
      </div>
    </div>
  </div>
</dialog>

<script>
  import docsearch from "@docsearch/js";

  docsearch({
    container: "#docsearch",
    appId: "DVHY2LO2GG",
    indexName: "pixeleye",
    apiKey: "b0c6d1ff6949bf05c049abe4209ad481",
  });
</script>

<script>
  const sidebar = document.getElementById(
    "navbar-sidebar"
  )! as HTMLDialogElement;
  const sidebarButton = document.getElementById("sidebar-button")!;

  sidebarButton.addEventListener("click", () => {
    sidebar.showModal();
  });

  sidebar.addEventListener("click", (event) => {
    if (event.target === sidebar) {
      sidebar.close();
    }
  });
</script>
