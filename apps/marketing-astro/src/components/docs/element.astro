---
import type { HTMLString } from "astro/runtime/server/index.js";

export type Component = (props: Record<string, any>) => any;

export type Element = ({
  children?: Element[];
  type: "component" | "text";
} & (
  | {
      type: "component";
      Component: Component | string;
      props?: Record<string, any>;
    }
  | {
      type: "text";
      content: HTMLString | string;
    }
));

interface Props {
  element: Element;
}

const { element } = Astro.props;
---

{
  element.type === "component" ? (
    <element.Component {...element.props}>
      {element.children?.map((child) => (
        <Astro.self element={child} />
      ))}
    </element.Component>
  ) : (
    element.content
  )
}
