name: Integration Test CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  integration-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: pixeleye
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      rabbitmq:
        image: rabbitmq:3-alpine
        env:
          RABBITMQ_DEFAULT_USER: rabbitmq
          RABBITMQ_DEFAULT_PASS: rabbitmq
        ports:
          - 5672:5672
          - 15672:15672
        options: --health-cmd "rabbitmq-diagnostics -q check_running" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Setup golang
        uses: actions/setup-go@v4
        with:
          go-version: "^1.20"

      - name: Install go dependencies
        working-directory: ./apps/backend
        run: |
          go mod download
          go mod verify

      - name: start go server
        working-directory: ./apps/backend
        run: go run main.go &

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: "16.x"

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies node
        run: pnpm install

      - name: Run api tests
        run: pnpm turbo test:api
